TITLE LXIM
SEARCH STENEX
;			*************************
;			*			*
;			*   SUBROUTINE LXIM	*
;			*			*
;			*************************

;BCPL CALLABLE SUBROUTINE FOR TRANSMITTING DATA TO IMSYS (VIA TSIM)

;TO TRANSFER A BLOCK OF DATA TO IMLAC MEMORY:
;	LXIM(ARRAY,COUNT,DATAMODE,IMLACADR)
;WHERE:	ARRAY = NAME OF ARRAY (PTR TO 1ST LOC) OF DATA
;	COUNT = NUMBER OF WORDS IN ARRAY (INTEGER)
;	DATAMODE = JUST+BIT816+BYTSIZ
;	 WHERE:	BYTSIZ=SIZE IN BITS OF THE PDP10 DATA BYTE
;		BIT816="100 IF 1 8-BIT BYTE IS TO BE XMTD FROM EACH
;				PDP10 DATA BYTE
;		      =0 IF 2 BYTES (I.E., A TOTAL OF 16 BITS);	
;		JUST="200 IF THE PDP10 BYTE AND THE XMTD BYTE(S) ARE
;		     TO COINCIDE AT THE LEFT (0'S FILLED IN IF NEEDED)
;		    =0 IF AT THE RIGHT
;	IMLACADR = STARTING ADDRESS IN IMLAC MEMORY OF START OF BLOCK
;		   (INTEGER)
;
A=1
B=2
C=3
D=4
E=5
F=6
CK=7
P=10
Q=16
POUT=101		;OUTPUT THRU PRINCIPAL OUTPUT FILE (TTY:)
AMODE:	0		;STORES NORMAL (ASCII, ETC.) MODE WORD
BMODE:	EXP 170000	;SFMOD WORD FOR BINARY DATA XMSN
BETA:	EXP 35		;TENEX-TO-TSIM BINARY MSG PRECURSOR
PDL:	BLOCK 3

	INTERNAL LXIM

LXIM:	JRST	XIM

XIM:	MOVEM	1,0(Q)
	MOVEI P,PDL-1
	MOVN C,3(Q)		;GET -WORDCOUNT
	JUMPGE C,CNT0		;EXIT IF WORDCOUNT <= 0
	MOVE D,4(Q)		;D=DATAMODE PARAMETER WORD
	HRRZ E,2(Q)		;E=PTR TO DATA
	HRLI E,^D36B23		;SET UP E AS A BYTE POINTER TO THE
	DPB D,[POINT 6,E,11]	; DATA (FOR ILDB)
	MOVE A,D
	ANDI A,77		;#BITS PER PDP-10 BYTE
	MOVEI F,^D36
	IDIV F,A		;36/N = #BYTES/WORD
	IMULB F,C		;C AND F NOW = -BYTE COUNT
	TRNN D,200		;SKIP IF LEFT JUST.
	JRST RJUST
	MOVE A,D		;SET UP LSH A,M-N
	ANDI A,77
	MOVN A,A
	ADDI A,^D8		;8-N
	TRNN D,100		;SKIP IF SEND 8 BITS
	ADDI A,^D8		;16-N
	HRRM A,SHFT
RJUST:	TRNN D,100		;SKIP IF SEND 8 BITS
	JRST SEND16
	MOVEI A,BYTE
	JRST FOO

SEND16:	LSH C,1			;DOUBLE THE # OF (8-BIT) BTES
	MOVEI A,BYTE2
FOO:	HRRM A,SENDIT
	PUSHJ P,SBMODE		;SET BIN MODE, SEND BETA
	MOVE A,C
	PUSHJ P,BYTE2		;SEND -# BYTES
	MOVE A,D
	LSH A,-5
	ANDI A,10
	PUSHJ P,BYTE		;SEND CONTROL BYTE
	MOVE A,5(Q)		;GET IMLAC CORE ADR
	PUSHJ P,BYTE2		;SEND IT
GETBYT:	ILDB A,E		;GET DATA BYTE
	TRNE D,200		;SKIP IF RIGHT JUST.
SHFT:	LSH A,.-.		;LSH A,M-N
SENDIT:	PUSHJ P,.-.		;TO BYTE OR BYTE2
	AOJN F,GETBYT
FINISH:	MOVE A,CK
	PUSHJ P,BYTE		;SEND CHECKSUM BYTE
	PUSHJ P,SAMODE		;RESTORE ASCII MODE, ETC.
CNT0:	JRST @0(Q)		;EXIT


SBMODE:	MOVEI 1,POUT
	RFMOD			;READ ASCII MODE WORD
	MOVEM 2,AMODE		;SAVE IT
	MOVE 2,BMODE
	SFMOD			;SET BINARY MODE
	SETZ CK,		;CLEAR CHECKSUM
	MOVE A,BETA
	JRST SEND		;SEND BETA

SAMODE:	SETZ A,			;SEND A ZERO BYTE
	PUSHJ P,BYTE		; TO RESET TSIM TO ASCII
	MOVEI 1,POUT
	MOVE 2,AMODE
	TRZ 2,6000		;TURN OFF ECHO
	SFMOD			;RESET MODE TO ASCII, ETC.
	PBIN
	CAIE	1,34
	JRST	.-2
	MOVEI 1,POUT
	MOVE 2,AMODE
	SFMOD
	POPJ P,

BYTE2:	LSHC A,^D-8		;SHIFT 2ND BYTE INTO B
	PUSHJ P,BYTE
	LSHC A,^D8
BYTE:	XOR CK,A		;ADD TO CHECKSUM BYTE
SEND:	PBOUT
	POPJ P,
	END
