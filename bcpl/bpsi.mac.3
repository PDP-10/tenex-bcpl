;<BCPL>BPSI.MAC;3    29-MAR-74 11:44:47	EDIT BY WOLF
;  FIXED BUG ON ARG 3 IN LEVEL HANDLERS 2 AND 3, WHICH WAS POINTED
;  OUT TO ME BY JMILLER.
;<WOLF>BPSI.MAC;30    13-JUN-73 13:32:32	EDIT BY WOLF
;<WOLF>BPSI.MAC;28    13-JUN-73 12:15:25	EDIT BY WOLF
;<WOLF>BPSI.MAC;27    13-JUN-73 11:25:03	EDIT BY WOLF
;  CHANGED INT. SUBR CALLING SEQ. TO LOOK LIKE BCPL CODE

	TITLE BPSI
	SEARCH STENEX
;MACHINE-LANGUAGE COMPONENT OF PSI PACKAGE FOR BCPL
;THIS STUFF HANDLES THE INTERRUPTS BY SAVING AC'S, CALLING THE
; USER-SPECIFIED SUBPROGRAM FOR THE PSI CHANNEL, THEN RESTORING AGAIN.

	ENTRY FNTBL,PSICHN,PSILEV,PSIPC,PSICH0

FNTBL:	.+1			;POINTER FOR BCPL VECTOR
REPEAT ^D36,<JRST DUMFN>	;HOLDS [JRST SUBPGM] FOR EACH CHANNEL

PSICHN:	.+1
	BLOCK ^D36		;PSI CHNTBL

PSILEV:	.+1
	0			;PSILEV|0 = meaningless
	PSIPC+2			;PSI LEVTBL
	PSIPC+3
	PSIPC+4

PSIPC:	.+1
	0			;PSIPC|0 = meaningless
	BLOCK 3			;HOLDS PC WORDS FOR LEVELS 1, 2, 3

SAVE1:	BLOCK ^D36		;FOR SAVING AC1 PRIOR TO GOING TO
				; LEVEL HANDLER
LEVELS:	LEV1
	LEV2
	LEV3

;AN INTERRUPT ON CHANNEL #K SHOULD DISPATCH TO 4*K+PSICH0
DEFINE PSICH(N) <
	MOVEM 1,SAVE1+'N	;;TEMP. SAVE AC1
	HLRZ 1,PSICHN+1+'N	;;RH(1)_PSI LEVEL NUMBER
	HRLI 1,'N		;;LH(1)_PSI CHANNEL NUMBER
	JRST @LEVELS-1(1)	;;GO TO LEVEL HANDLER
>
I=0
PSICH0:	REPEAT ^D36,<
	PSICH(I)
I=I+1>

R=1			;REGISTER FOR JSP AND FUNCTION RETURN
S=16			;BCPL STACK POINTER
OPDEF SAV [MOVEM R,0(S)]
OPDEF RET [JRST 2,@(S)]
DEFINE ARG(N) <<N>+1(S)>	;BCPL ARGUMENT

;FOR NOW, OUR QUICK AND DIRTY WAY OF GETTING A NEW STACK FRAME
; IS TO MERELY GOOSE THE PRESENT ONE BY 50000.  FOR THE LONG RUN, THIS
; IS UNSATISFACTORY, SINCE IT'S NOT GUARANTEED TO WORK IN ALL CASES.
DSTACK=^D50000

;LEVEL HANDLERS SAVE AC'S, CALL SUBPROGRAM, RESTORE, AND DEBRK.
LEV1:	HLRZM 1,LEV1CH		;SAVE CHANNEL #
	MOVEI 1,LEV1AC
	BLT 1,LEV1AC+17		;SAVE AC'S 0, 2-17
	MOVE 2,LEV1CH
	MOVE 1,SAVE1(2)
	MOVEM 1,LEV1AC+1	;SAVE AC 1
	MOVEI 1,3		;3 ARGS TO SUBPROGRAM:
	MOVEM 1,ARG 0+DSTACK
	MOVEI 1,1
	MOVEM 1,ARG 1+DSTACK	;ARG #1 = PSI LEVEL NUMBER
	HRRZM 2,ARG 2+DSTACK	;ARG #2 = PSI CHANNEL NUMBER
	MOVE 3,PSILEV+1+1
	MOVEM 3,ARG 3+DSTACK	;ARG #3 = LV OF PC STORAGE WORD
	ADDI S,DSTACK
	JSP 1,FNTBL+1(2)	;CALL THE SUBPROGRAM
	SUBI S,DSTACK
	MOVSI 17,LEV1AC		;UPON RETURN, RESTORE ALL ACS
	BLT 17,17
	DEBRK
	HALTF			;JUST IN CASE IT SHOULD RETURN
LEV1CH:	0
LEV1AC:	BLOCK 20		;HOLDS AC'S 0-17 FOR LEVEL 1

LEV2:	HLRZM 1,LEV2CH
	MOVEI 1,LEV2AC
	BLT 1,LEV2AC+17
	MOVE 2,LEV2CH
	MOVE 1,SAVE1(2)
	MOVEM 1,LEV2AC+1
	MOVEI 1,3
	MOVEM 1,ARG 0+DSTACK
	MOVEI 1,2
	MOVEM 1,ARG 1+DSTACK
	HRRZM 2,ARG 2+DSTACK
	MOVE 3,PSILEV+1+2
	MOVEM 3,ARG 3+DSTACK
	ADDI S,DSTACK
	JSP 1,FNTBL+1(2)
	SUBI S,DSTACK
	MOVSI 17,LEV2AC
	BLT 17,17
	DEBRK
	HALTF
LEV2CH:	0
LEV2AC:	BLOCK 20

LEV3:	HLRZM 1,LEV3CH
	MOVEI 1,LEV3AC
	BLT 1,LEV3AC+17
	MOVE 2,LEV3CH
	MOVE 1,SAVE1(2)
	MOVEM 1,LEV3AC+1
	MOVEI 1,3
	MOVEM 1,ARG 0+DSTACK
	MOVEI 1,3
	MOVEM 1,ARG 1+DSTACK
	HRRZM 2,ARG 2+DSTACK
	MOVE 3,PSILEV+1+3
	MOVEM 3,ARG 3+DSTACK
	ADDI S,DSTACK
	JSP 1,FNTBL+1(2)
	SUBI S,DSTACK
	MOVSI 17,LEV3AC
	BLT 17,17
	DEBRK
	HALTF
LEV3CH:	0
LEV3AC:	BLOCK 20

;DUMMY FUNCTION
DUMFN:	JRST .+1
	SAV
	HRROI 1,[ASCIZ /
No subroutine for PSI on channel /]
	PSOUT
	MOVEI 1,101
	MOVE 2,ARG 2		;2ND ARG = CHNL NUMBER
	MOVEI 3,^D10
	NOUT
	 JFCL
	MOVEI 1,37
	PBOUT
	HALTF
	RET

;LongDebrk(pclv,label,stacklevel)
; where pclv = lv of pc return word, which is to get stuffed with
;  label
; stacklevel = value of stack pointer for the environment of label
;(This is declared as global #126 in <BCPL>PSIHEAD.BCP)
	ENTRY GL126
GL126:	JRST .+1
	SAV
	MOVE 1,ARG 1		;ADR OF PC STORAGE WORD
	MOVE 2,ARG 2		;LABEL
	HRRM 2,(1)		;STUFF INTO PC WORD
	MOVE S,ARG 3		;SET NEW STACK POINTER

	DEBRK
	HRROI 1,[ASCIZ /
LongDebrk: Was not on a PSI.
/]
	PSOUT
	HALTF

	END
