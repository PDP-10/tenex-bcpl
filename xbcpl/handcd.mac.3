
TITLE HANDCD

SEARCH STENEX
MLON
EXTERN GL21		;  EOFFLG
ENTRY JSETUP,JRCH,JRFPTR,JNDRD,LSLIDE,GL502,GL513,GL514
OPDEF RET[JRST @0(16)]	;BCPL RETURN
;TABLE IS OF FOLLOWING FORMAT:
;0   CURRENT BYTE POINTER
;1   COUNT OF NUMBER OF CHARACTER IN FILE
;2   TOTAL CHARACTERS IN FILE
;3   STARTING ADDRESS,,ENDING ADDRESS (FOR JNDRD)

JNDRD:	JRST .+1
	;JNDRD(PJFN)
	MOVEM 1,0(16)
	MOVE 3,2(16)
	SETOM 1
	HRRZ 4,3(3)
	LSH 4,-11
	HLRZ 2,3(3)	;GET STARTING PAGE
	LSH 2,-11
	HRLI 2,400000
	HRLI 4,400000
	PMAP		;KILL IT
	AOS 2
	CAME 2,4
	JRST .-3	;REPEAT
	RET

JSETUP:	JRST .+1
	;JSETUP(JFN)
	MOVEM 1,0(16)
	MOVE 1,2(16)	;GET JFN
	SETO 2,
	SFPTR		;SET TO END OF FILE
	JRST NOFPTR
	RFPTR		;GET NUMBER OF BYTES
	JRST NOFPTR
	MOVE 5,TBLPTR	;GET POINTER
	SETZM 1(5)	;ZERO ACTUAL COUNT
	MOVEM 2,2(5)	;SAVE NUMBER OF BYTES
	AOS 7,2(5)	;INCREMENT NUMBER OF BYTES
	HRLI 4,440700		;7 BIT BYETS
	MOVE 2,7
	IDIVI 2,5000
	HRR 4,HIPAGE	;GET BYTE POINTER
	MOVEM 4,0(5)	;SAVE BYTE POINER
	HRLZM 4,3(5)	;STORE STARTING PAGE
	MOVE 6,4
	LSH 4,-11
	ANDI 4,777
	HRLZ	1,1	;MOVE JFN TO LEFT HALF
	EXCH 2,4	;SWAP NUMBER OF PAGES AND BYTE POINTER
	HRLZI 3,100000	;READ ONLY
	HRLI 2,400000	;CURRNET FORK
LOOP:	PMAP		;PMAP
	AOJ 1,0		;INCREMENT PAGE
	AOJ 2,0		;INCREMENT PAGE
	ADDI 6,1000	;INCREMENT BYTE POINTER
	SOJGE 4,LOOP
	MOVEM 6,HIPAGE	;SAVE BYTE POINTER
	HRRM 6,3(5)	;STORE ENDING PAGE
	MOVE 1,2(16)
	CLOSF		;CLOSE FILE
	JRST NOCLS	;CLOSE FILE FAILED!!!
	MOVE 1,5	;GET TABLE POINTER
	ADDI 5,4	;INCREMENT TABLE POINTER
	MOVEM 5,TBLPTR
	RET

GL514:
TBL:	BLOCK 110
GL502:
TBLPTR:	TBL
GL513:
HIPAGE:	POINT 7,400000

JRCH:	JRST .+1
	;JRCH(PJFN)
	MOVEM 1,0(16)
	SETZM GL21	;NO EOF
	MOVE 1,2(16)	;GET PSEUDO-JFN [PJFN]
	AOS 2,1(1)	;INCREMENT BYTE POINER AND LOAD INTO AC 2
	CAMN 2,2(1)	;CHECK IF EOF?
	JRST EOF	;YES.
	ILDB 1,(1)	;GET NEXT CHARACTER
	RET
EOF:	SOS 1(1)	;SUBTRACT ONE FROM BYTE COUNT IN CASE HE TRIES AGAIN
	HRRZI 1,777	;RETURN 777 FOR EOF
	SETOM GL21	;END OF FILE
	RET

JRFPTR:	JRST .+1
	;JRFPTR(PJFN)
	MOVEM 1,0(16)
	MOVE 1,2(16)	;GET PSEUDO-JFN [PJFN]
	MOVE 1,1(1)	;GET BYTE COUNT
	RET

NOCLS:	HRRZI 2,[ASCIZ /
CAN'T CLOSE FILE IN JIM'S ROUTINES/]
	MOVEI 1,101
	HRLI 2,440700
	SETZM 3
	SOUT
	HALTF
NOFPTR:	HRRZI 2,[ASCIZ /
FILE POINTER FAILED IN JIM'S ROUTINES/]
	JRST NOCLS+1

EXTERNAL GL612,GL610,GL640
ENTRY GL652,GL653

GL652:	JRST .+1	;CELLWITHNAME

	MOVEM 1,0(16)	;SAVE RETURN ADDRESS
	MOVE 2,2(16)	;GET ARGUMENT (N)
	MOVE 2,1(2)	;GET H2!N...H2 IS A MANIFEST!!!!!
	MOVE 1,GL612	;GET DVECE
	MOVE 4,GL610	;GET DVEC
	ADD 4,1		;ADD LOOP INDX -- THIS GIVES A POINTER DVEC!X
BBLOOP:	SUBI 1,2	;START INDEX AT DVECE-2  DEPENDS ON DVECN=2!!!!
	SUBI 4,2
	JUMPE 1,.+3	;DONE IF INDEX IS 0
	HRRE 5,(4)	;GET THE RIGHT HALF OF DVEC!X
	CAMN 2,5	;SKIP IF IT'S NOT A MATCH
	JRST @0(16)	;EXIT
	JRST BBLOOP	;REPEAT


GL653:	JRST .+1	;CHECKDISTINCT

	MOVEM 1,0(16)	;SAVE RETURN ADDRESS
	MOVE 2,2(16)		;GET ARGUMENT E
	MOVE 3,GL610		;GET DVEC
	ADD 3,2			;GET DVEC!E
LOOP2:	CAML 2,3(16)		;CHECK IF E>S
	JRST @0(16)		;EXIT WHEN DONE
	MOVEI 4,(2)		;GET CONTENTS OF DVEC!E
	MOVE 5,3(16)		;GET S
	SUBI 5,2		;SUBTRACT DVECN FROM S ... DEPENDS ON DVECN=2!!!!
ALOOP:	ADDI 4,2		;INCREMENT INDEX
	CAMLE 4,5		;CHECK P<S-DVECN
	JRST LOOP1		;NO, SO EXIT FROM LOOP
	MOVE 6,GL610		;GET DVEC
	ADD 6,5			;GET DVEC!P
	HRRE 6,(6)		;GET CONTENTS OF DVEC!P
	HRRE 7,(3)		;GET CONTENTS OF DVEC!E
	CAME 6,7		;ARE THEY EQUAL?
	JRST ALOOP		;NO, CHECK NEXT ENTRY
	MOVEM 2,4(16)		;YES, COMPLAIN
	MOVEM 3,5(16)
	MOVEM 4,6(16)
	MOVEM 5,7(16)
	MOVEI 2,4
	MOVEM 2,11(16)		;SAVE NUMBER OF ARGUMENTS
	MOVEI 2,216		;SECOND ARGUMENT = 142 DECIMAL =216 OCTAL
	MOVEM 2,12(16)
	SETZM 13(16)
	SETZM 15(16)
	HRRE 2,(3)		;GET CONTENTS OF N
	MOVEM 2,14(16)
	ADDI 16,10		;BUMP STACK POINTER
	JSP 1,GL640		;TRANSREPORT
	SUBI 16,10		;IF IT RETURNS...
	MOVE 2,4(16)
	MOVE 3,5(16)
	MOVE 4,6(16)
	MOVE 5,7(16)
	JRST ALOOP		;CONTINUE LOOP
LOOP1:	ADDI 2,2		;INCREMENT INDEX BY DVECN .. USES DVECN=2!!!!
	ADDI 3,2		;INCREMENT POINTER BY DVECN .. USES DVECN=2!!!!
	JRST LOOP2

;;
;; CODE TO SLIDE TO THE LOADER FOR CCL LOADER! COMMAND
;;  ONE ARGUMENT TO LSLIDE: THE JFN FOR <SUBSYS>LOADER.SAV
;;
LSLIDE:	JRST	.+1
	SETO	1,	; SET UP 1,2,3 FOR PMAP
	MOVE	2,[400000,,1]
	SETZ	3,

	MOVEI	4,776	;# PAGES TO MAP OUT (LOOP COUNT)
	MOVE	5,2(16)	;JFN FOR LOADER
	HRLI	5,400000	; SAVE IN AC5 FOR USE LATER IN 1 FOR GET

;MOVE CODE INTO ACS
	MOVE	6,[PMAP]
	MOVE	7,[AOS	2]
	MOVE	10,[SOJG	4,6]
	MOVE	11,[MOVE	1,5]
	MOVE	12,[GET]
	MOVE	13,[MOVEI	1,400000]
	MOVE	14,[GEVEC]
	MOVE	15,[JRST	1(2)]
	JRST	6	;GO DO IT!!

LIT
END
