
// Declarations for the Code Generator of the BCPL Compiler for TENEX.

get "<xbcpl>headbcpl"
get "<bcpl>head"
get "<xbcpl>headtrncon"

// CG3 routines

external
{ WRCH
    VMINIT
    WROCT
    WRPU
    WRIMP
    WRLST
    RLINIT
    CGPS2
    WRINT
    WREXT
    WRBLK
 }

global
{
//CG0 statics
  Report:          #210
SSP: #211
  Ch:              #212
  OutA:            #214
  OutB:            #215
  bl1pptr:         #131
  bl1sptr:         #216
  bl2pptr:         #223
  bl2sptr:         #224
  Block2JFN:       #227
  flgstk:          #221         // stack to hold info about MACRO
MaxStack:#226
                                //-- resprocs...
                                // whether code has been generated by
                                //-- the args
  Arg1:            #132
  Arg2:            #133
  ConstV:          #100
  ConstP:          #101
  ConstL:          #103
  Svec:            #104
  SvecP:           #105
  SvecT:           #106
  StatV:           #107
  StatP:           #110
  TempV:           #112
  TempT:           #113
  P10regV:         #115
  MAXXRNUMBER:     #117
  globinfo:        #122
  Op:              #172
  Block1JFN:       #174         // JFN for temp file to hold impure
                                //-- code generated

// CG3 statics

  MacroJFN:        #222

// CG0 routines

  Readop:          #134
  ReadNM:          #135
  ReadL:           #136
  Initstack:       #116
Push:#114
StartStack:#120
Pop:#121
Elt:#123

// CG1 routine

  Scan:            #125

// CG2 routines

  LoadT:           #137
  NextP10reg:      #141
  Storein:         #142
  StoreI:          #143
  MovetoReg:       #146
  Lose1:           #151
  PairP10reg:      #152
  Stack:           #156
  MakeNUMSimple:   #163
  Store:           #165
  MoveNtoReg:      #175

// CG3 routines

  NoteGlobal:      #173
  WRDATA:          #170
  CompMAC:         #147
  WRLAB:           #130
  WRMAC:           #124

// CG4 routines

  CGscale:         #213
  Outconsts:       #126
  Outnumbs:        #127
  CGstring:        #140
  CGplus:          #153
  CGsubt:          #154
  CGrelVal:        #157
  CGrel:           #160
  CGshift:         #161
  CGlogop:         #162
  CGrv:            #164
  CGapply:         #166
  CGswitch:        #167
  storestring:     #171

//CG5 routines

  Addrble:         #144
  Makeaddrble:     #145
  Addr:            #150
  Iszero:          #155
  CGstindc:        #176
  CGrvcandrvcn:    #177
  CGcfgandcfgn:    #200
  CGspcandslc:     #201

 }
manifest                        // OCODE Constants
{ LOCAL  :=  1001
  LABEL  :=  1002
  NUMBER  := 1003
  Off  :=    2
 }

manifest
{ P10reg  :=   6
MAXAC := #17
  StackAC  :=  #16              // AC to use for the working stack
  RsltAC  :=   1                // AC in which results are passed
  JSPAC  :=    1                // AC for doing JSP to routines
  BlockA  :=   0
  BlockB  :=   1
  Tempsize  := 5
 }

static
{ V1:   vec 10
 }                              // Used in calls to Addr

get "<xbcpl>pdpops"             // Get the opcode definitions
