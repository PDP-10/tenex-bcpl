IF1,
<
$$LOW=0
REPEAT 0,
<
THIS IS A FILE OF MACRO AND SYMBOL DEFINITIONS. THEY ARE USEFUL
IN WRITING BCPL COMPATIBLE MACHINE-CODE PROCEDURES.

THEY ARE VALID FOR VERSION 3 OF THE COMPILER.
>

	UNIVERSAL	BCLMAC

AC==1
B==2
C==3
D==4
E==5
F==6
G==7
H==10
I==11
J==12
K==13
T==14
O==15
P==16
S==17

PDLSIZ==100	; SIZE OF SYSTEM PDL
PERLINE=5	; NUMBER OF TRACE ITEMS PER LINE FOR BATCH JOBS
.TBUFS=100	; SIZE OF TRACE BUFFER

GETCORE==0	; DEFINED - GET MORE CORE IF NEEDED
TYPECORE==0	; DEFINED - TYPE OUT CORE INCREMENTS
STACKMIN==2000	; DEFINED - MIN STACK SIZE ON EXECUTION
KI10==0		; DEFINED - RUNNING ON KI10 PROCESSOR
REPEAT 0,<
$$LOW==0	; DEFINED - PRODUCE LOW SEG CODE
STACKBASE==2000	; DEFINED - PUT STACK BASE AT VALUE (OVERLAYED SEGMENTS)
>


DEFINE	HEAD(NAME)
<	TITLE	NAME
	EXTERNAL	.BCPL.
IFNDEF $$LOW
<	TWOSEG
	RELOC	400000
>
$H==.
$L==0
$S==1
>

DEFINE	BCPL(NAME)
<	HEAD	NAME
	JRST	$IN
$$IN==0
>

DEFINE	SAVE
<	ADDI	P,	@(T)
	MOVEM	T,	0(P)
IFDEF $$T,<$$T==0>
>

DEFINE	RTRN
<IFDEF $$T,
<IFE $$T,<JRSTF	@(P)>
 IFN $$T,<JRST	.TX##>
>
IFNDEF $$T,<JRSTF @(P)>
>

DEFINE	TRACE(NAME,V,%N)
<	MOVEI	K,	V(P)
	JSP	T,	.TE##
IFDEF $$LOW,
<	XWD	0,	[BCPLSTRING(<NAME>)]
>
IFNDEF $$LOW,
<	XWD	%N#,	[BCPLSTRING(<NAME>)]
>
$$T==1
>

DEFINE	STACKCHECK(V)
<	MOVEI	K,	V(P)
	CAMLE	K,	.SL##
	JSP	K,	.SO##
>

DEFINE	CALL(NAME, V, NPARS, LHS)
<	JSP	T,	NAME##
IFNB <NPARS>,
<IFNB <LHS>,
<	SUBI	P,	@[BYTE (1)1(12)NPARS(5)0(18)V]
>
IFB <LHS>,
<	SUBI	P,	@[BYTE (1)0(12)NPARS(5)0(18)V]
>
>
IFB <NPARS>,
<	SUBI	P,	V
>
>

DEFINE	HI
<IFNDEF $$LOW
<IFE $S,
<$S==1
$L==.
	RELOC	$H
>>>

DEFINE	LO
<IFNDEF $$LOW
<IFN $S,
<$S==0
$H==.
	RELOC	$L
>>>

DEFINE BCPLSTRING($C)
<$N==0
$CT==1
IRPC $C,<$N==$N+1>
$N==$N_1
IRPC $C,
<IFN $CT-5,
<$N==$N_6+"$C"
$N==$N_1
>
IFE $CT-5,
<	EXP	$N
$N=="$C"_1
$CT==0
>
$CT==$CT+1
>
IFE $CT-4,<$N==$N_7>
IFE $CT-3,<$N==$N_16>
IFE $CT-2,<$N==$N_25>
IFE $CT-1,<$N==$N_34>
	EXP	$N
>

DEFINE	INLINK
<IFE $$IN,
<	HI
	LIT
$IN:
>
$$IN==1
>

DEFINE	LOCAL(VALUE,ADDR)
<	INLINK
	MOVEI	AC,	VALUE
	MOVEM	AC,	ADDR
>

DEFINE	EXTRNL(VALUE,NAME)
<	LO
	ENTRY	NAME
NAME:	BLOCK	1
	HI
	INLINK
	MOVEI	AC,	VALUE
	MOVEM	AC,	NAME
>

DEFINE	BCPLND
<	INLINK
IFDEF $$T,
<IFNDEF $$LOW,
<$$X==$L
	LO
	VAR
	HI
REPEAT $L-$$X,
<	SETZM	$$X
$$X==$$X+1
>>>
>

DEFINE	PUSHAC(A)
<	IRP	A,
<	PUSH	S,	A
>
>

DEFINE	POPAC(A)
<	IRP	A,
<	POP	S,	A
>
>

DEFINE	AUX(NAME)
<	TITLE	$$$'NAME
IFNDEF $$LOW,
<	TWOSEG
	RELOC	400000
>
	ENTRY	NAME
>

DEFINE	SCALAR(SEGNAM,NAME)
<	TITLE	SEGNAM
IFNDEF $$LOW,
<	TWOSEG
	RELOC 400000
	SETZM	%'NAME
	RELOC 0
>
	ENTRY	%'NAME
%'NAME:	BLOCK	1
>

DEFINE BOOTSTRAP(N)
<	MOVEI	AC,N'##
	JUMPE	AC,.+4
	JSP	T,@N
	SUBI	P,0
	MOVE	P,AC
>

>
	END
